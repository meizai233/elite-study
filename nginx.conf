# 开启缓存
etag on;

# 开启压缩
gzip on;
gzip_disable "msie6";
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_min_length 256;

# 压缩的格式
gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

upstream frontend {
  # 按照最大权重进行负载均衡
  server 172.29.216.216:3000 weight=1;
}

# 如果只需要https 为什么还要开放http
server {
  listen 80;
  server_name elitestudy.fun;

  # 重定向
  rewrite ^(.*)$ https://elitestudy.fun$1 permanent;
}

server {
	listen 443 ssl;
  server_name elitestudy.fun;

  # 访问https证书
	ssl_certificate_key  /etc/nginx/conf/ssl/elitestudy.fun-frontend.key;
	ssl_certificate      /etc/nginx/conf/ssl/elitestudy.fun-frontend.pem;

	# ssl_session_cache: 缓存时间 ssl_session_timeout: 超时时间
	ssl_session_cache    shared:SSL:1m;
	ssl_session_timeout  5m;

	# 加密配置 多个算法用:分隔，ALL表示全部算法，!表示不启用该算法，+表示将该算法排到最后面去
	ssl_ciphers  HIGH:!aNULL:!MD5;
	# 当为on时，服务器加密算法将优于客户端加密算法
	ssl_prefer_server_ciphers  on;

	# 反向代理
  location / {
    proxy_pass http://frontend/;
    proxy_buffering off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;        
  }
}

